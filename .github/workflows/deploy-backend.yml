name: Deploy Backend to Host

on:
  push:
    branches:
      - main

jobs:
  docker:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Set up Java environment
      - name: Set Up Java
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "adopt"

      # Run Maven build
      - name: Run Maven Build
        run: |
          mvn clean install -DskipTests -B
          mkdir -p target/dependency && (cd target/dependency; unzip ../*.jar)

      # Set up QEMU for Docker
      - name: Set Up QEMU
        uses: docker/setup-qemu-action@v3

      # Set up Docker Buildx
      - name: Set Up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Login to DockerHub
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      # Prepare Docker Compose
      - name: Prepare Docker Compose Run
        run: ls -l

      # Build and push Docker image
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: aphichaya8/234-deploylab-backend:latest

      # Copy file to the target host via SCP
      - name: Copy File via ssh password
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.HOST_SERVER }}
          username: ${{ secrets.HOST_USER_NAME }}
          key: ${{ secrets.HOST_SSH_PRIVATE_KEY }}
          port: 22
          source: "docker-compose.yml"
          target: "/home/ubuntu/backend"

      # Run Docker Compose on the target host
      - name: Run Docker Compose
        uses: appleboy/ssh-action@v1.2.1
        with:
          host: ${{ secrets.HOST_SERVER }}
          username: ${{ secrets.HOST_USER_NAME }}
          key: ${{ secrets.HOST_SSH_PRIVATE_KEY }}
          port: 22
          script: |
            cd /home/ubuntu/backend
            echo ${{ secrets.DOCKER_HUB_TOKEN }} | docker login --username ${{ secrets.DOCKER_HUB_USERNAME }} --password-stdin
            docker compose down
            docker compose pull
            docker compose up -d
            rm -rf /home/ubuntu/backend
